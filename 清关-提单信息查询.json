swagger: '2.0'
info:
  description: 航空公司从供应商资料中提取类别为“航空公司”的资料中提取;</br> 查询对象：空运大票单；</br> 过滤规则：</br>&nbsp;&nbsp;&nbsp;&nbsp;1、空运大票表状态为“已起飞”或“到达目的地”，且结束状态<>到达目的地；</br> &nbsp;&nbsp;&nbsp;&nbsp;2、空运大票中的中转地或目的地与清关单单头的目的地相同；</br> &nbsp;&nbsp;&nbsp;&nbsp;3、空运大票的预订航班日期介于安排日期范围之间；</br> &nbsp;&nbsp;&nbsp;&nbsp;4、航空/代理公司不为空时，空运大票单头中的航空/代理公司＝当前录入值；</br> 列表内容：</br>                        &nbsp;&nbsp;特殊字段说明：</br>&nbsp;&nbsp;&nbsp;&nbsp;安排日期＝空运大票的预订日期；起飞日期、到达日期、板号均从对应的空运大票有中提取相应的字段；</br> &nbsp;&nbsp;货物标签：</br>&nbsp;&nbsp;&nbsp;&nbsp;从空运大票中检测其对应的委托单的货物明细，若有A，则此处的货物标签为A；否则为B；
  version: 1.0.0
  title: 清关-调入信息
  contact:
    email: it_yichao@choicexp.com.cn
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
  - name: BigTickets
    description: 空运大票
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /clearance/findBigTickets:
    get:
      tags:
        - BigTickets
      summary: 获取空运大票信息
      description: 获取空运大票信息
      operationId: findBigTickets
      produces:
        - application/json
      parameters:
        - name: FLIGHT_DATE_STARE
          in: query
          description: 预定日期（开始）
          required: false
          type: date
        - name: FLIGHT_DATE_END
          in: query
          description: 预定日期（结束）
          required: false
          type: date
        - name: AIRLINE_COMPANY
          description: 航空代理公司
          in: query
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BigTickets'
        '400':
          description: Invalid status value
  /clearance/combineBigTickets:
    post:
      tags:
        - BigTickets
      summary: 获取选定的信息
      description: 'Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      operationId: combineBigTickets
      produces:
        - application/xml
        - application/json
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid tag value
definitions:
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
  BigTickets: 
     type: object
     properties:
       FLIGHT_DATE:
        type: string
       C_INFO:
         type: string
       TICKET_ID: 
         type: string
       LADING_NO: 
        type: string
       E_PLACE:
        type: string
       FLIGHT:  
        type: string
       ROUTE:
        type: string
       TAKE_OFF_DATE:
        type: string
       LAND_DATE:
        type: string
       COUNT:
        type: string
       WEIGHT:
        type: string
       BOARD_NUMBER:
        type: string
       TAG:
        type: string
    


externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'

